{"version":3,"sources":["helpers/Socket.js","App.jsx","index.js"],"names":["socket","io","App","element","icon","faPaperPlane","useState","userNameDB","setUserNameDB","messages","setMessages","questionsDB","setQuestionsDB","useEffect","console","log","chatBox","document","querySelector","on","msg","questions","scrollTop","scrollHeight","off","sendMessage","e","preventDefault","userNameForm","messageForm","getElementById","message","user","value","livesName","emit","focus","className","htmlFor","type","placeholder","onChange","target","autoComplete","hidden","map","data","i","class","id","onSubmit","onClick","ReactDOM","render"],"mappings":"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","file":"static/js/main.90009635.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n\r\nlet socket = io(\"https://servernodeio.herokuapp.com/\")\r\n\r\nexport default socket","import React, { useState, useEffect } from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './app.css'\r\n\r\nimport socket from './helpers/Socket'\r\n\r\nconst App = () => {\r\n\r\n  const element = <FontAwesomeIcon icon={faPaperPlane} />\r\n\r\n  const [userNameDB, setUserNameDB] = useState('Juan')\r\n  const [messages, setMessages] = useState([])\r\n  const [questionsDB, setQuestionsDB] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    console.log(\"Effect\")\r\n\r\n    const chatBox = document.querySelector('#chat');\r\n\r\n    socket.on('actions', function (msg) {\r\n      setMessages([...messages, msg])\r\n      console.log(msg)\r\n    });\r\n\r\n    socket.on('questionsDB', questions => {\r\n      console.log(\"Question res\")\r\n      console.log(questions)\r\n      setQuestionsDB(questions)\r\n    });\r\n\r\n    chatBox.scrollTop = chatBox.scrollHeight;\r\n\r\n    return () => {\r\n      socket.off();\r\n    };\r\n\r\n  }, [messages])\r\n\r\n  const sendMessage = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    const chatBox = document.querySelector('#chat');\r\n    const userNameForm = userNameDB\r\n    const messageForm = document.getElementById(\"messageForm\")\r\n\r\n    const message = {\r\n      user: userNameForm,\r\n      message: messageForm.value,\r\n      livesName: \"Lives test 1\"\r\n    };\r\n\r\n    socket.emit(\"actions\", message);\r\n\r\n    messageForm.value = \"\";\r\n    messageForm.focus()\r\n\r\n    chatBox.scrollTop = chatBox.scrollHeight;\r\n\r\n  }\r\n\r\n  const changeUser = (e) => setUserNameDB(e.target.value)\r\n\r\n  return (\r\n    <div>\r\n\r\n      <h2 className=\"text-center text-title mt-5\" >CHAT HEROKU</h2>\r\n      <br />\r\n      <br />\r\n\r\n      <div className=\"container-fluid\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 container-video\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n\r\n                <label htmlFor=\"\" className=\"text-secondary\">Usuario DB</label>\r\n                <input type=\"text\" className=\"form-control mt-1\" placeholder=\"Ingresar usuario\" value={userNameDB} onChange={changeUser} autoComplete=\"off\" />\r\n\r\n                <button className=\"btn btn-info\" hidden type=\"submit\">Guardar</button>\r\n\r\n                <hr />\r\n\r\n                {\r\n                  questionsDB.map((data, i) => {\r\n                    return (\r\n                      <div className=\"card__question me-2\" key={i /* Mientras */}>\r\n                        <div className=\"card__header text-white\">\r\n                          <span>{data.user}</span>\r\n                        </div>\r\n                        <div className=\"card__body text-white\">\r\n                          {data.message}\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-6 \" >\r\n\r\n            <div class=\"container__buttons\">\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\">Chat Academy</button>\r\n              <button class=\"btn btn-outline-secondary\" type=\"button\">Preguntas Academy</button>\r\n            </div>\r\n\r\n            {/* RECORDAR QUE SI SE QUITA EL ID DEL CHAT SALE ERROR POR QUE NO SE PUEDE HACER SCROLL */}\r\n\r\n            <div className=\"container-chat\" >\r\n\r\n              <div className=\"container-messsages\" id=\"chat\">\r\n\r\n                {\r\n\r\n                  messages.map((data, i) => {\r\n                    if (data.type === \"question\") {\r\n                      return (\r\n                        <div className=\"card__question me-2\" key={i /* Mientras */}>\r\n                          <div className=\"card__header text-white\">\r\n                            <span>{data.user}</span>\r\n                          </div>\r\n                          <div className=\"card__body text-white\">\r\n                            {data.message}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <div className=\"card me-2 \" key={i /* Mientras */}>\r\n                          <div className=\"card__header\">\r\n                            <span>{data.user}</span>\r\n                          </div>\r\n                          <div className=\"card__body\">\r\n                            {data.message}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n\r\n              </div>\r\n\r\n\r\n              <hr />\r\n\r\n              <form onSubmit={sendMessage}>\r\n\r\n                <div className=\"container-message\">\r\n\r\n                  <div className=\"input-group mb-3\">\r\n                    <input type=\"text\" className=\"form-control\" id=\"messageForm\" placeholder=\"Escribe tu comentario\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" autoComplete=\"off\" />\r\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" onClick={sendMessage}>{element}</button>\r\n                  </div>\r\n\r\n                  <button className=\"btn btn-primary\" type=\"submit\" hidden>Enviar</button>\r\n                  <small className=\"text-secondary\">* Recuerda el signo de interrogaci√≥n \" ? \" si vas a preguntar. </small>\r\n\r\n                </div>\r\n\r\n              </form>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}